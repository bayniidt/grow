{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{354:function(t,a,s){\"use strict\";s.r(a);var n=s(43),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"vue\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue\"}},[t._v(\"#\")]),t._v(\" Vue\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"基础\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基础\"}},[t._v(\"#\")]),t._v(\" 基础\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"多看文档，每看一次就进步一次\")])]),t._v(\" \"),s(\"p\",[t._v(\"官方文档 \"),s(\"a\",{attrs:{href:\"https://cn.vuejs.org/v2/guide/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"传送门\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[t._v(\"自己写的脑图 \"),s(\"a\",{attrs:{href:\"https://www.processon.com/mindmap/5e5f837ce4b097b727507936\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"传送门\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"熟记 \"),s(\"code\",[t._v(\"生命周期\")]),t._v(\"，\"),s(\"code\",[t._v(\"watch\")]),t._v(\"，\"),s(\"code\",[t._v(\"computed\")]),t._v(\"，\"),s(\"code\",[t._v(\"filter\")]),t._v(\"，\"),s(\"code\",[t._v(\"v-xxx指令\")]),t._v(\"，\"),s(\"code\",[t._v(\"事件修饰符\")]),t._v(\" 等等\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"watch\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#watch\"}},[t._v(\"#\")]),t._v(\" watch\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"业务场景：在多层Tabs嵌套时，每当Tabs切换就渲染不同的组件、不同的数据表格，这时就可以使用watch来监听Tabs切换时的ID变化，根据ID变化来请求不同的数据。\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"immediate\")]),t._v(\": 即使监视的对象\"),s(\"code\",[t._v(\"id\")]),t._v(\"没有变化也会触发回调函数\"),s(\"code\",[t._v(\"handler\")])]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"deep\")]),t._v(\"：深度监听，监听的是一个对象，即使是对象中深层嵌套的数据发生变化也会触发回调处理\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"handler(newVla,oldVla)\")]),t._v(\"：新值：\"),s(\"code\",[t._v(\"newVal\")]),t._v(\" 旧值：\"),s(\"code\",[t._v(\"oldVla\")]),t._v(\" 根据业务逻辑来对比处理\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"div\",{staticClass:\"highlight-lines\"},[s(\"br\"),s(\"br\"),s(\"br\"),s(\"div\",{staticClass:\"highlighted\"},[t._v(\" \")]),s(\"div\",{staticClass:\"highlighted\"},[t._v(\" \")]),s(\"br\"),s(\"br\"),s(\"br\"),s(\"br\"),s(\"br\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"  watch\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// id变化 说明tabs被切换了\")]),t._v(\"\\n    id\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      immediate\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      deep\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"handler\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"newVla\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"oldVla\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 监听id发生变化的回调函数，处理事件请求新数据\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"computed\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#computed\"}},[t._v(\"#\")]),t._v(\" computed\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"组件传值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件传值\"}},[t._v(\"#\")]),t._v(\" 组件传值\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"父传子 \"),s(\"code\",[t._v(\"v-bind:\")]),t._v(\" +  \"),s(\"code\",[t._v(\"props\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 父组件引用子组件，在子组件标签上使用:属性绑定\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"son \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"data\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'data'\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 子组件使用props接收父组件传递的数据，注意props与data评级，在页面中通过this.data引用，注意数据不可重复命名\")]),t._v(\"\\nprops\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'data'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 上下两种写法都可以\")]),t._v(\"\\nprops\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  type\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Array\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 指定数据类型\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"default\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 默认值\")]),t._v(\"\\n  required\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 是否毕传\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ol\",{attrs:{start:\"2\"}},[s(\"li\",[t._v(\"父传子 \"),s(\"code\",[t._v(\"$ref\")]),t._v(\" + \"),s(\"code\",[t._v(\"$refs\")]),t._v(\" 引用\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 子组件标签上添加ref属性\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"son ref\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'son'\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 父组件通过$refs获取子组件引用可以直接调用子组件数据与方法，但是官方不建议这么使用\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$refs\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"son\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$parent \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])])]),s(\"ol\",{attrs:{start:\"3\"}},[s(\"li\",[t._v(\"父子引用 \"),s(\"code\",[t._v(\"$parent\")]),t._v(\" \"),s(\"code\",[t._v(\"$children\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 父组件通过$children可以获取子组件实例\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$children \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 返回一个数组\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 子组件通过$parent可以获取父组件实例\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$parent\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"data\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\" \\n\")])])]),s(\"ol\",{attrs:{start:\"4\"}},[s(\"li\",[t._v(\"发布订阅通信 \"),s(\"code\",[t._v(\"$emit\")]),t._v(\" + \"),s(\"code\",[t._v(\"@eventName\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 子组件派发事件，父组件监听事件，当派发事件触发时传递数据并且执行父组件监听回调\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"input @change\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'sonEvent'\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\nmethods\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sonEvent\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"data\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"$emit\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'inputChange'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"data\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 父组件监听事件并且处理事件传递的数据\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"son @inputChange\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'inputChange'\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\nmethods\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"inputChange\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"data\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"data \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" data\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"自定义指令\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自定义指令\"}},[t._v(\"#\")]),t._v(\" 自定义指令\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"插槽\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#插槽\"}},[t._v(\"#\")]),t._v(\" 插槽\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"动态组件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#动态组件\"}},[t._v(\"#\")]),t._v(\" 动态组件\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"混入\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#混入\"}},[t._v(\"#\")]),t._v(\" 混入\")])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}