{"remainingRequest":"G:\\grow\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!G:\\grow\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","dependencies":[{"path":"G:\\grow\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","mtime":1633836637025},{"path":"G:\\grow\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633836637998},{"path":"G:\\grow\\node_modules\\babel-loader\\lib\\index.js","mtime":1633836637889}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJHOi9ncm93L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICJHOi9ncm93L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IHVuaW9uQnkgZnJvbSAnbG9kYXNoL3VuaW9uQnknOwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gY3JlYXRlZCB3aWxsIGJlIGNhbGxlZCBvbiBib3RoIGNsaWVudCBhbmQgc3NyCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2l0ZU1ldGEgPSB0aGlzLiRzaXRlLmhlYWRUYWdzLmZpbHRlcihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSwKICAgICAgICAgIGhlYWRlclR5cGUgPSBfcmVmMlswXTsKCiAgICAgIHJldHVybiBoZWFkZXJUeXBlID09PSAnbWV0YSc7CiAgICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSwKICAgICAgICAgIF8gPSBfcmVmNFswXSwKICAgICAgICAgIGhlYWRlclZhbHVlID0gX3JlZjRbMV07CgogICAgICByZXR1cm4gaGVhZGVyVmFsdWU7CiAgICB9KTsKCiAgICBpZiAodGhpcy4kc3NyQ29udGV4dCkgewogICAgICB2YXIgbWVyZ2VkTWV0YUl0ZW1zID0gdGhpcy5nZXRNZXJnZWRNZXRhVGFncygpOwogICAgICB0aGlzLiRzc3JDb250ZXh0LnRpdGxlID0gdGhpcy4kdGl0bGU7CiAgICAgIHRoaXMuJHNzckNvbnRleHQubGFuZyA9IHRoaXMuJGxhbmc7CiAgICAgIHRoaXMuJHNzckNvbnRleHQucGFnZU1ldGEgPSByZW5kZXJQYWdlTWV0YShtZXJnZWRNZXRhSXRlbXMpOwogICAgfQogIH0sCiAgLy8gT3RoZXIgbGlmZSBjeWNsZXMgd2lsbCBvbmx5IGJlIGNhbGxlZCBhdCBjbGllbnQKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gaW5pdCBjdXJyZW50TWV0YVRhZ3MgZnJvbSBET00KICAgIHRoaXMuY3VycmVudE1ldGFUYWdzID0gX3RvQ29uc3VtYWJsZUFycmF5KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ21ldGEnKSk7IC8vIHVwZGF0ZSB0aXRsZSAvIG1ldGEgdGFncwoKICAgIHRoaXMudXBkYXRlTWV0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTWV0YTogZnVuY3Rpb24gdXBkYXRlTWV0YSgpIHsKICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aGlzLiR0aXRsZTsKICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSB0aGlzLiRsYW5nOwogICAgICB2YXIgbmV3TWV0YVRhZ3MgPSB0aGlzLmdldE1lcmdlZE1ldGFUYWdzKCk7CiAgICAgIHRoaXMuY3VycmVudE1ldGFUYWdzID0gdXBkYXRlTWV0YVRhZ3MobmV3TWV0YVRhZ3MsIHRoaXMuY3VycmVudE1ldGFUYWdzKTsKICAgIH0sCiAgICBnZXRNZXJnZWRNZXRhVGFnczogZnVuY3Rpb24gZ2V0TWVyZ2VkTWV0YVRhZ3MoKSB7CiAgICAgIHZhciBwYWdlTWV0YSA9IHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIubWV0YSB8fCBbXTsgLy8gcGFnZU1ldGFUYWdzIGhhdmUgaGlnaGVyIHByaW9yaXR5IHRoYW4gc2l0ZU1ldGFUYWdzCiAgICAgIC8vIGRlc2NyaXB0aW9uIG5lZWRzIHNwZWNpYWwgYXR0ZW50aW9uIGFzIGl0IGhhcyB0b28gbWFueSBlbnRyaWVzCgogICAgICByZXR1cm4gdW5pb25CeShbewogICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbicsCiAgICAgICAgY29udGVudDogdGhpcy4kZGVzY3JpcHRpb24KICAgICAgfV0sIHBhZ2VNZXRhLCB0aGlzLnNpdGVNZXRhLCBtZXRhSWRlbnRpZmllcik7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJHBhZ2U6IGZ1bmN0aW9uICRwYWdlKCkgewogICAgICB0aGlzLnVwZGF0ZU1ldGEoKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB1cGRhdGVNZXRhVGFncyhudWxsLCB0aGlzLmN1cnJlbnRNZXRhVGFncyk7CiAgfQp9OwovKioNCiAqIFJlcGxhY2UgY3VycmVudE1ldGFUYWdzIHdpdGggbmV3TWV0YVRhZ3MNCiAqIEBwYXJhbSB7QXJyYXk8T2JqZWN0Pn0gbmV3TWV0YVRhZ3MNCiAqIEBwYXJhbSB7QXJyYXk8SFRNTEVsZW1lbnQ+fSBjdXJyZW50TWV0YVRhZ3MNCiAqIEByZXR1cm5zIHtBcnJheTxIVE1MRWxlbWVudD59DQogKi8KCmZ1bmN0aW9uIHVwZGF0ZU1ldGFUYWdzKG5ld01ldGFUYWdzLCBjdXJyZW50TWV0YVRhZ3MpIHsKICBpZiAoY3VycmVudE1ldGFUYWdzKSB7CiAgICBfdG9Db25zdW1hYmxlQXJyYXkoY3VycmVudE1ldGFUYWdzKS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgIGRvY3VtZW50LmhlYWQucmVtb3ZlQ2hpbGQoYyk7CiAgICB9KTsKICB9CgogIGlmIChuZXdNZXRhVGFncykgewogICAgcmV0dXJuIG5ld01ldGFUYWdzLm1hcChmdW5jdGlvbiAobSkgewogICAgICB2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWV0YScpOwogICAgICBPYmplY3Qua2V5cyhtKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICB0YWcuc2V0QXR0cmlidXRlKGtleSwgbVtrZXldKTsKICAgICAgfSk7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGFnKTsKICAgICAgcmV0dXJuIHRhZzsKICAgIH0pOwogIH0KfQovKioNCiAqIFRyeSB0byBpZGVudGlmeSBhIG1ldGEgdGFnIGJ5IG5hbWUsIHByb3BlcnR5IG9yIGl0ZW1wcm9wDQogKg0KICogUmV0dXJuIGEgY29tcGxldGUgc3RyaW5nIGlmIG5vbmUgcHJvdmlkZWQNCiAqIEBwYXJhbSB7T2JqZWN0fSB0YWcgZnJvbSBmcm9udG1hdHRlciBvciBzaXRlTWV0YVRhZ3MNCiAqIEByZXR1cm5zIHtTdHJpbmd9DQogKi8KCgpmdW5jdGlvbiBtZXRhSWRlbnRpZmllcih0YWcpIHsKICBmb3IgKHZhciBfaSA9IDAsIF9hcnIgPSBbJ25hbWUnLCAncHJvcGVydHknLCAnaXRlbXByb3AnXTsgX2kgPCBfYXJyLmxlbmd0aDsgX2krKykgewogICAgdmFyIGl0ZW0gPSBfYXJyW19pXTsKICAgIGlmICh0YWcuaGFzT3duUHJvcGVydHkoaXRlbSkpIHJldHVybiB0YWdbaXRlbV0gKyBpdGVtOwogIH0KCiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRhZyk7Cn0KLyoqDQogKiBSZW5kZXIgbWV0YSB0YWdzDQogKg0KICogQHBhcmFtIHtBcnJheX0gbWV0YQ0KICogQHJldHVybnMge1N0cmluZ30NCiAqLwoKCmZ1bmN0aW9uIHJlbmRlclBhZ2VNZXRhKG1ldGEpIHsKICBpZiAoIW1ldGEpIHJldHVybiAnJzsKICByZXR1cm4gbWV0YS5tYXAoZnVuY3Rpb24gKG0pIHsKICAgIHZhciByZXMgPSAiPG1ldGEiOwogICAgT2JqZWN0LmtleXMobSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgIHJlcyArPSAiICIuY29uY2F0KGtleSwgIj1cIiIpLmNvbmNhdChtW2tleV0sICJcIiIpOwogICAgfSk7CiAgICByZXR1cm4gcmVzICsgIj4iOwogIH0pLmpvaW4oJ1xuICAgICcpOwp9"},{"version":3,"sources":["G:/grow/node_modules/@vuepress/core/lib/client/root-mixins/updateMeta.js"],"names":["unionBy","created","siteMeta","$site","headTags","filter","headerType","map","_","headerValue","$ssrContext","mergedMetaItems","getMergedMetaTags","title","$title","lang","$lang","pageMeta","renderPageMeta","mounted","currentMetaTags","document","querySelectorAll","updateMeta","methods","documentElement","newMetaTags","updateMetaTags","$page","frontmatter","meta","name","content","$description","metaIdentifier","watch","beforeDestroy","forEach","c","head","removeChild","m","tag","createElement","Object","keys","key","setAttribute","appendChild","item","hasOwnProperty","JSON","stringify","res","join"],"mappings":"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","sourcesContent":["import unionBy from 'lodash/unionBy'\r\n\r\nexport default {\r\n  // created will be called on both client and ssr\r\n  created () {\r\n    this.siteMeta = this.$site.headTags\r\n      .filter(([headerType]) => headerType === 'meta')\r\n      .map(([_, headerValue]) => headerValue)\r\n\r\n    if (this.$ssrContext) {\r\n      const mergedMetaItems = this.getMergedMetaTags()\r\n\r\n      this.$ssrContext.title = this.$title\r\n      this.$ssrContext.lang = this.$lang\r\n      this.$ssrContext.pageMeta = renderPageMeta(mergedMetaItems)\r\n    }\r\n  },\r\n  // Other life cycles will only be called at client\r\n  mounted () {\r\n    // init currentMetaTags from DOM\r\n    this.currentMetaTags = [...document.querySelectorAll('meta')]\r\n\r\n    // update title / meta tags\r\n    this.updateMeta()\r\n  },\r\n\r\n  methods: {\r\n    updateMeta () {\r\n      document.title = this.$title\r\n      document.documentElement.lang = this.$lang\r\n\r\n      const newMetaTags = this.getMergedMetaTags()\r\n      this.currentMetaTags = updateMetaTags(newMetaTags, this.currentMetaTags)\r\n    },\r\n\r\n    getMergedMetaTags () {\r\n      const pageMeta = this.$page.frontmatter.meta || []\r\n      // pageMetaTags have higher priority than siteMetaTags\r\n      // description needs special attention as it has too many entries\r\n      return unionBy([{ name: 'description', content: this.$description }],\r\n        pageMeta, this.siteMeta, metaIdentifier)\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    $page () {\r\n      this.updateMeta()\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    updateMetaTags(null, this.currentMetaTags)\r\n  }\r\n}\r\n\r\n/**\r\n * Replace currentMetaTags with newMetaTags\r\n * @param {Array<Object>} newMetaTags\r\n * @param {Array<HTMLElement>} currentMetaTags\r\n * @returns {Array<HTMLElement>}\r\n */\r\nfunction updateMetaTags (newMetaTags, currentMetaTags) {\r\n  if (currentMetaTags) {\r\n    [...currentMetaTags].forEach(c => {\r\n      document.head.removeChild(c)\r\n    })\r\n  }\r\n  if (newMetaTags) {\r\n    return newMetaTags.map(m => {\r\n      const tag = document.createElement('meta')\r\n      Object.keys(m).forEach(key => {\r\n        tag.setAttribute(key, m[key])\r\n      })\r\n      document.head.appendChild(tag)\r\n      return tag\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Try to identify a meta tag by name, property or itemprop\r\n *\r\n * Return a complete string if none provided\r\n * @param {Object} tag from frontmatter or siteMetaTags\r\n * @returns {String}\r\n */\r\nfunction metaIdentifier (tag) {\r\n  for (const item of ['name', 'property', 'itemprop']) {\r\n    if (tag.hasOwnProperty(item)) return tag[item] + item\r\n  }\r\n  return JSON.stringify(tag)\r\n}\r\n\r\n/**\r\n * Render meta tags\r\n *\r\n * @param {Array} meta\r\n * @returns {String}\r\n */\r\n\r\nfunction renderPageMeta (meta) {\r\n  if (!meta) return ''\r\n  return meta.map(m => {\r\n    let res = `<meta`\r\n    Object.keys(m).forEach(key => {\r\n      res += ` ${key}=\"${m[key]}\"`\r\n    })\r\n    return res + `>`\r\n  }).join('\\n    ')\r\n}\r\n"]}]}